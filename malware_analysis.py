import hashlib
import mimetypes
from utils import check_virustotal_rate_limit, VIRUSTOTAL_API_KEY
import requests

def analyze_file(filename, file_content):
    results = []
    
    # Basic file info
    file_type = mimetypes.guess_type(filename)[0] or 'Unknown'
    file_size = len(file_content)
    file_hash = hashlib.sha256(file_content).hexdigest()
    
    results.append(f"File: {filename}")
    results.append(f"Type: {file_type}")
    results.append(f"Size: {file_size} bytes")
    results.append(f"SHA256: {file_hash}")
    
    # VirusTotal analysis
    vt_result = check_virustotal_file(file_content)
    if vt_result:
        results.append("VirusTotal results:")
        results.append(f"  Last analysis stats: {vt_result['last_analysis_stats']}")
        results.append(f"  Type description: {vt_result['type_description']}")
        results.append(f"  Tags: {', '.join(vt_result['tags'])}")
    else:
        results.append("VirusTotal results: Not available")
    
    return results

def check_virustotal_file(file_content):
    check_virustotal_rate_limit()

    file_hash = hashlib.sha256(file_content).hexdigest()
    url = f"https://www.virustotal.com/api/v3/files/{file_hash}"
    headers = {
        "accept": "application/json",
        "x-apikey": VIRUSTOTAL_API_KEY
    }
    
    try:
        response = requests.get(url, headers=headers)
        
        if response.status_code == 200:
            result = response.json()
            data = result['data']['attributes']
            return {
                'last_analysis_stats': data.get('last_analysis_stats'),
                'type_description': data.get('type_description'),
                'tags': data.get('tags', [])
            }
        elif response.status_code == 404:
            print(f"File not found in VirusTotal database")
            return None
        else:
            print(f"Error checking VirusTotal for file: {response.status_code}")
            return None
    except Exception as e:
        print(f"Error checking VirusTotal for file: {str(e)}")
        return None